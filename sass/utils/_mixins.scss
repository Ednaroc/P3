@mixin media-query($media-size) {
    @media screen and (min-width: map-get($breakpoints, $media-size)){
        @content;
    }
}
@mixin interaction-query($pointing-quality) {
    @media (pointer: $pointing-quality) {
        @content;
    }
}

@mixin shadow-drop ($color: $color-bckgrd) {
    filter: drop-shadow(0 5px 3px darken($color,10%));
    &:hover, &--active {
        filter: drop-shadow(0 5px 3px darken($color,20%));
    }
}
@mixin shadow-box ($color: $color-bckgrd) {
    // offset-x | offset-y | blur-radius | spread-radius | color 
    box-shadow: 0 8px 20px -4px darken($color,15%);
    &:hover {
        box-shadow: 0 8px 20px -4px darken($color,25%);
    }
}

@mixin btn {
    border: none;
    border-radius: 50px;
    font-weight: 400;
    font-family: 'Roboto', sans-serif;
    padding: 16px 24px;
    color: $color-white;
    @include shadow-drop;
    background-image: linear-gradient(170deg, $color-2, $color-1);
    position: relative;
    // So the button text sits on top of the lighter background.
    z-index: 1;
    // opacity: 1;
    // transition: opacity 0.5s ease-out;
    &:hover {
        // background-image: linear-gradient(170deg, lighten($color-2, 10%), lighten($color-1, 10%));
        &::after {
            opacity: 1;
        }
    }
    &::after {
        // Animating on hover the background-image using opacity on the ::after pseudo-element
        // to make the gradient lighter (but not creating a transparent button). It acts as
        // a color canvas.
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-image: linear-gradient(170deg, lighten($color-2, 10%), lighten($color-1, 10%));
        opacity: 0;
        z-index: -1;
        transition: opacity 0.5s ease-out;
    }
}

// @mixin has-nth($expression, $element: '*') {
//     &:nth-last-child(#{$expression}):first-child,
//     &:nth-last-child(#{$expression}):first-child ~ #{$element} {
//         @content;
//     }
// }
